{"version":3,"sources":["components/AddCategory.jsx","components/GifGridUser.jsx","components/GifGridItem.jsx","helpers/getGifs.js","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","className","type","value","onChange","target","GifGridUser","user","avatar_url","display_name","username","src","title","alt","GifGridItem","url","getGifs","search","a","encodeURI","fetch","response","json","data","console","log","map","image","id","images","original","gifs","GifGrid","category","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mLAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKhB,SACE,uBACEO,UAAU,QACVC,KAAK,OACLC,MAAOV,EACPW,SApBoB,SAACR,GACzBA,EAAEC,iBACFH,EAAcE,EAAES,OAAOF,a,gBCMZG,EAZK,SAAC,GAA2D,IAAD,IAAxDC,KAAQC,GAAgD,aAAT,GAAS,GAAhDA,WAAYC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,SACvD,OACE,sBAAKT,UAAU,OAAf,UACE,qBAAKU,IAAKH,EAAYI,MAAOH,EAAcI,IAAKJ,IAChD,sBAAKR,UAAU,cAAf,UACE,+BAAOQ,IACP,qCAAQC,YCKDI,EAVK,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,IAAKH,EAAkB,EAAlBA,MAAOL,EAAW,EAAXA,KACjC,OACE,sBAAKN,UAAU,OAAf,UACE,qBAAKU,IAAKI,EAAKF,IAAKD,EAAOA,MAAOA,IAClC,4BAAIA,IACHL,GAAQ,cAAC,EAAD,CAAaA,KAAMA,Q,uBCRrBS,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfH,EADe,iDACiCI,UACpDF,GAFmB,+DAIEG,MAAML,GAJR,cAIfM,EAJe,gBAKEA,EAASC,OALX,uBAKbC,EALa,EAKbA,KACRC,QAAQC,IAAIF,GANS,UAOFA,EAAKG,KAAI,SAACC,GAAD,MAAY,CACtCC,GAAID,EAAMC,GACVhB,MAAOe,EAAMf,MACbG,IAAKY,EAAME,OAAOC,SAASf,IAC3BR,KAAMoB,EAAMpB,SAXO,eAOfwB,EAPe,yBAadA,GAbc,4CAAH,sD,SCoBLC,EAhBC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,ECF0B,SAACA,GAC3B,MAA0BzC,mBAAS,CACjC+B,KAAM,GACNW,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KASA,OAJAC,qBAAU,WACRrB,EAAQiB,GAAUK,MAAK,SAACP,GAAD,OAAUK,EAAS,CAAEb,KAAMQ,EAAMG,SAAS,SAChE,CAACD,IAEGE,EDR2BI,CAAaN,GAAjCJ,EAAd,EAAQN,KAAcW,EAAtB,EAAsBA,QAEtB,OACE,sBAAKjC,UAAU,yCAAf,UACE,6BAAKgC,IACJC,GAAW,cACZ,qBAAKjC,UAAU,aAAf,SACG4B,EAAOH,KAAI,gBAAGE,EAAH,EAAGA,GAAOD,EAAV,wBACV,cAAC,EAAD,eAA0BA,GAARC,YEYbY,EArBM,WACnB,IACA,EAAoChD,mBADf,CAAC,kBACtB,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACE,qCACE,wBAAQU,UAAU,2CAAlB,SACE,qBACEA,UAAU,QACVU,IAAI,qBACJE,IAAI,QACJD,MAAM,YAGV,cAAC,EAAD,CAAarB,cAAeA,IAC3BS,EAAW0B,KAAI,SAACO,GAAD,OACd,cAAC,EAAD,CAASA,SAAUA,GAAeA,U,MCf1CQ,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.86fc0f8a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((categories) => [inputValue, ...categories]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from \"react\";\r\n\r\nconst GifGridUser = ({ user: { avatar_url, display_name, username } = {} }) => {\r\n  return (\r\n    <div className=\"user\">\r\n      <img src={avatar_url} title={display_name} alt={display_name} />\r\n      <div className=\"user-detail\">\r\n        <span>{display_name}</span>\r\n        <span>@{username}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridUser;\r\n","import React from \"react\";\r\nimport GifGridUser from \"./GifGridUser\";\r\n\r\nconst GifGridItem = ({ url, title, user }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={url} alt={title} title={title} />\r\n      <p>{title}</p>\r\n      {user && <GifGridUser user={user} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (search) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    search\r\n  )}&limit=10&api_key=sVZLHeSkpHjZRYJMAdN633lpxCjAADDN`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n  console.log(data);\r\n  const gifs = await data.map((image) => ({\r\n    id: image.id,\r\n    title: image.title,\r\n    url: image.images.original.url,\r\n    user: image.user,\r\n  }));\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\nimport GifGridItem from \"../components/GifGridItem\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <div className=\"grid animate__animated animate__fadeIn\">\r\n      <h3>{category}</h3>\r\n      {loading && \"Cargando...\"}\r\n      <div className=\"card-grid \">\r\n        {images.map(({ id, ...image }) => (\r\n          <GifGridItem key={id} {...image} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((gifs) => setState({ data: gifs, loading: false }));\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const initialState = [\"One Punch Man\"];\r\n  const [categories, setCategories] = useState(initialState);\r\n\r\n  return (\r\n    <>\r\n      <header className=\"animate__animated animate__fadeInTopLeft\">\r\n        <img\r\n          className=\"giphy\"\r\n          src=\"./images/giphy.png\"\r\n          alt=\"Giphy\"\r\n          title=\"Giphy\"\r\n        />\r\n      </header>\r\n      <AddCategory setCategories={setCategories} />\r\n      {categories.map((category) => (\r\n        <GifGrid category={category} key={category} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}